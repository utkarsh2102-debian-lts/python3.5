Origin: https://github.com/python/cpython/commit/095373c32d16df575ba5fcb5f44bf44119b26193
Last-Update: 2020-07-09
Reviewed-by: Sylvain Beucler <beuc@debian.org>

From 095373c32d16df575ba5fcb5f44bf44119b26193 Mon Sep 17 00:00:00 2001
From: Victor Stinner <vstinner@redhat.com>
Date: Sat, 7 Sep 2019 08:33:24 +0200
Subject: [PATCH] bpo-36742: Corrects fix to handle decomposition in usernames
 (GH-13812) (GH-13814) (#14772)

(cherry picked from commit 8d0ef0b5edeae52960c7ed05ae8a12388324f87e)

Co-authored-by: Steve Dower <steve.dower@python.org>
(cherry picked from commit fd1771dbdd28709716bd531580c40ae5ed814468)
---
 Lib/test/test_urlparse.py | 11 ++++++-----
 Lib/urllib/parse.py       |  6 +++---
 2 files changed, 9 insertions(+), 8 deletions(-)

Index: python3.5-3.5.3/Lib/test/test_urlparse.py
===================================================================
--- python3.5-3.5.3.orig/Lib/test/test_urlparse.py
+++ python3.5-3.5.3/Lib/test/test_urlparse.py
@@ -987,11 +987,12 @@ class UrlParseTestCase(unittest.TestCase
             urllib.parse.urlsplit('http://\u30d5\u309a\ufe1380')
 
         for scheme in ["http", "https", "ftp"]:
-            for c in denorm_chars:
-                url = "{}://netloc{}false.netloc/path".format(scheme, c)
-                with self.subTest(url=url, char='{:04X}'.format(ord(c))):
-                    with self.assertRaises(ValueError):
-                        urllib.parse.urlsplit(url)
+            for netloc in ["netloc{}false.netloc", "n{}user@netloc"]:
+                for c in denorm_chars:
+                    url = "{}://{}/path".format(scheme, netloc.format(c))
+                    with self.subTest(url=url, char='{:04X}'.format(ord(c))):
+                        with self.assertRaises(ValueError):
+                            urllib.parse.urlsplit(url)
 
 class Utility_Tests(unittest.TestCase):
     """Testcase to test the various utility functions in the urllib."""
Index: python3.5-3.5.3/Lib/urllib/parse.py
===================================================================
--- python3.5-3.5.3.orig/Lib/urllib/parse.py
+++ python3.5-3.5.3/Lib/urllib/parse.py
@@ -325,9 +325,9 @@ def _checknetloc(netloc):
     # looking for characters like \u2100 that expand to 'a/c'
     # IDNA uses NFKC equivalence, so normalize for this check
     import unicodedata
-    n = netloc.rpartition('@')[2] # ignore anything to the left of '@'
-    n = n.replace(':', '')        # ignore characters already included
-    n = n.replace('#', '')        # but not the surrounding text
+    n = netloc.replace('@', '')   # ignore characters already included
+    n = n.replace(':', '')        # but not the surrounding text
+    n = n.replace('#', '')
     n = n.replace('?', '')
     netloc2 = unicodedata.normalize('NFKC', n)
     if n == netloc2:
