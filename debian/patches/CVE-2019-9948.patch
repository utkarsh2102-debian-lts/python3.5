Origin: https://github.com/python/cpython/commit/4fe82a8eef7aed60de05bfca0f2c322730ea921e
Last-Update: 2020-07-09
Reviewed-by: Sylvain Beucler <beuc@debian.org>

From 4fe82a8eef7aed60de05bfca0f2c322730ea921e Mon Sep 17 00:00:00 2001
From: Victor Stinner <vstinner@redhat.com>
Date: Sun, 14 Jul 2019 09:04:15 +0200
Subject: [PATCH] bpo-35907, CVE-2019-9948: urllib rejects local_file:// scheme
 (GH-13474) (GH-13505) (#13510)

CVE-2019-9948: Avoid file reading by disallowing local-file:// and
local_file:// URL schemes in URLopener().open() and
URLopener().retrieve() of urllib.request.

Co-Authored-By: SH <push0ebp@gmail.com>
---
 Lib/test/test_urllib.py                        | 18 ++++++++++++++++++
 Lib/urllib/request.py                          |  2 +-
 .../2019-05-21-23-20-18.bpo-35907.NC_zNK.rst   |  3 +++
 3 files changed, 22 insertions(+), 1 deletion(-)
 create mode 100644 Misc/NEWS.d/next/Security/2019-05-21-23-20-18.bpo-35907.NC_zNK.rst

Index: python3.5-3.5.3/Lib/test/test_urllib.py
===================================================================
--- python3.5-3.5.3.orig/Lib/test/test_urllib.py
+++ python3.5-3.5.3/Lib/test/test_urllib.py
@@ -16,6 +16,7 @@ except ImportError:
     ssl = None
 import sys
 import tempfile
+import warnings
 from nturl2path import url2pathname, pathname2url
 
 from base64 import b64encode
@@ -1459,6 +1460,23 @@ class URLopener_Tests(unittest.TestCase)
                 "spam://c:|windows%/:=&?~#+!$,;'@()*[]|/path/"),
                 "//c:|windows%/:=&?~#+!$,;'@()*[]|/path/")
 
+    def test_local_file_open(self):
+        # bpo-35907, CVE-2019-9948: urllib must reject local_file:// scheme
+        class DummyURLopener(urllib.request.URLopener):
+            def open_local_file(self, url):
+                return url
+
+        with warnings.catch_warnings(record=True):
+            warnings.simplefilter("ignore", DeprecationWarning)
+
+            for url in ('local_file://example', 'local-file://example'):
+                self.assertRaises(OSError, urllib.request.urlopen, url)
+                self.assertRaises(OSError, urllib.request.URLopener().open, url)
+                self.assertRaises(OSError, urllib.request.URLopener().retrieve, url)
+                self.assertRaises(OSError, DummyURLopener().open, url)
+                self.assertRaises(OSError, DummyURLopener().retrieve, url)
+
+
 # Just commented them out.
 # Can't really tell why keep failing in windows and sparc.
 # Everywhere else they work ok, but on those machines, sometimes
Index: python3.5-3.5.3/Lib/urllib/request.py
===================================================================
--- python3.5-3.5.3.orig/Lib/urllib/request.py
+++ python3.5-3.5.3/Lib/urllib/request.py
@@ -1688,7 +1688,7 @@ class URLopener:
         name = 'open_' + urltype
         self.type = urltype
         name = name.replace('-', '_')
-        if not hasattr(self, name):
+        if not hasattr(self, name) or name == 'open_local_file':
             if proxy:
                 return self.open_unknown_proxy(proxy, fullurl, data)
             else:
Index: python3.5-3.5.3/Misc/NEWS.d/next/Security/2019-05-21-23-20-18.bpo-35907.NC_zNK.rst
===================================================================
--- /dev/null
+++ python3.5-3.5.3/Misc/NEWS.d/next/Security/2019-05-21-23-20-18.bpo-35907.NC_zNK.rst
@@ -0,0 +1,3 @@
+CVE-2019-9948: Avoid file reading by disallowing ``local-file://`` and
+``local_file://`` URL schemes in ``URLopener().open()`` and
+``URLopener().retrieve()`` of :mod:`urllib.request`.
